PYTHON FOR DATA SCIENCE TIPS, TRICKS, & TECHNIQUES
1. INGESTING DATA
WORK WITH JSON DATA
WORK WITH CSV FILES
WORK WITH PARQUET FILES
READ DATA FROM GITHUB API

2. EXPLORING DATA
READ DATA WITH PANDAS
INSPECT DATAFRAMES WITH PANDAS
AGGREGATE DATA WITH PANDAS
EXPORT DATA WITH PANDAS

3. VISUALIZING DATA
BASIC CHARTS IN GGPLOT
SMALL MULTIPLES WITH GGPLOT
STYLING PLOTS IN GGPLOT
FINISH YOUR PLOTS




************************************************************************************************************
1. INGESTING DATA
************************************************************************************************************

WORK WITH JSON DATA
import json
# load json file from /data folder
with open('data/monthlySalesbyCategoryMultiple.json') as json_data:
    d = json.load(json_data)

# see what the dictionary looks like
from pprint import pprint as pp
pp(d)

# print(keys at the top level
print(d.keys())

# print the keys and values at the first level
for key, value in d.items():
    print( key + ': ', pp(value))
>>>
category:  Furniture
region:  West
monthlySales:  [{'month': 20130101, 'sales': 38}, {'month': 20130201, 'sales': 35}, {'month': 20130301, 'sales': 41}, {'month': 20130401, 'sales': 55}, {'month': 20130501, 'sales': 58}, {'month': 20130601, 'sales': 66}, {'month': 20130701, 'sales': 74}, {'month': 20130801, 'sales': 78}, {'month': 20130901, 'sales': 38}, {'month': 20131001, 'sales': 30}, {'month': 20131101, 'sales': 26}, {'month': 20131201, 'sales': 29}]
category:  Technology
region:  West
monthlySales:  [{'month': 20130101, 'sales': 54}, {'month': 20130201, 'sales': 66}, {'month': 20130301, 'sales': 77}, {'month': 20130401, 'sales': 70}, {'month': 20130501, 'sales': 60}, {'month': 20130601, 'sales': 63}, {'month': 20130701, 'sales': 55}, {'month': 20130801, 'sales': 47}, {'month': 20130901, 'sales': 55}, {'month': 20131001, 'sales': 30}, {'month': 20131101, 'sales': 22}, {'month': 20131201, 'sales': 77}]

# print the keys and values at the third level
for a in d['contents']:
    for b in a['monthlySales']:
        for key, value in b.items():
            print( key + ": ", value)
month:  20130101
sales:  38
month:  20130201
sales:  35
month:  20130301
sales:  41
month:  20130401
sales:  55
......


WORK WITH CSV FILES
import csv

with open('data/MonthlySales.csv', 'r') as f:
    reader = csv.DictReader(f)
    for row in reader:
        MonthlySales.append(row)


WORK WITH PARQUET FILES
import pyarrow.parquet as pq
table = pq.read_table('data/MonthlyProductSales.parquet')
table_dict = dict(table.to_pydict())
table_dict

READ DATA FROM GITHUB API
import requests
response = requests.get('https://api.github.com/repos/bsullins/data/contents/monthlySalesbyCategoryMultiple.json')


import json
import base64
encoded = 'YmFzZTY0IGVuY29kZWQgc3RyaW5n'
data = base64.b64decode(encoded)
data


resp_json = json.loads(response.text)
base64.b64decode(resp_json['content'])


response = requests.get('https://api.github.com/repos/bsullins/data/contents/MonthlySales.csv')
response_json = json.loads(response.text)
csv_val = base64.b64decode(resp_json['content'])
csv_val



QUIZ
What python module can you use to print a formatted JSON string?
pprint

What method should you use to convert a CSV file into a Dict?
DictReader

What Big Data platform commonly works with Parquet Files?
Impala

What encoding method does GitHub use in their data api?
base64

************************************************************************************************************
2. EXPLORING DATA
************************************************************************************************************

READ DATA WITH PANDAS
df = pd.read_csv('data/MonthlySales.csv')

import json
from pandas.io.json import json_normalize

with open('data/monthlySalesbyCategoryMultiple.json') as json_data:
    d = json.load(json_data)
df = json_normalize(d['contents'], 'monthlySales', ['category', 'region'])


#reading parquet into panda dataframe
import pyarrow.parquet as pq
table = pq.read_table('data/MonthlyProductSales.parquet')
table.to_pandas()


# you need to install html5lib
# pip install html5lib
# reading data from a html site
df = pd.read_html('https://en.wikipedia.org/wiki/List_of_U.S._state_abbreviations')

# get part that has the states and abbreviations
df_usa = df[0]

# remove unnecessary rows and columns
final_df = df_usa.drop(df_usa.index[range(0,11)]).drop(df_usa.columns[range(10,15)], axis=1)

# rename columns
final_df.rename(columns={0: 'Region Name', 1: 'Region Status', 2: 'ISO', 3: 'ANSI_Letter', 4: 'ANSI_Code'
                         , 5: 'USPS', 6: 'USCG', 7: 'GPO', 8: 'AP', 9: 'Other Abbreviations'}, inplace=True)

INSPECT DATAFRAMES WITH PANDAS

# show summary stats of the sales column
df.describe()

df.info()


AGGREGATE DATA WITH PANDAS

df.groupby(df['Month of Order Date'].str[:4]).describe().reset_index().rename(columns={'Month of Order Date': 'Year of Order'})
df_export = df.groupby([df['Month of Order Date'].str[:4], 'Product Name']).sum().reset_index()
df_export.rename(columns={'Month of Order Date': 'Year of Order'})
# overall product sales totals
df.groupby('Product Name').sum().reset_index()


EXPORT DATA WITH PANDAS

# export to csv, check csv when finished
df_export.to_csv('data/output/YearlyProductSalesTotals.csv', header=True, index=False, encoding='utf-8')

# export to json, check json when finished
df_export.to_json('data/output/YearlyProductSalesTotals.json', orient='records')

# export to excel, check excel file when finished
df_export.to_excel('data/output/YearlyProductSalesTotals.xlsx', header=True, index=False)


QUIZ:
What Pandas construct is similar to a database table?
DataFrame

What Pandas function shows summary stats for a given DataFrame?
describe

What Pandas function combines similar values for aggregation?
groupby

************************************************************************************************************
3. VISUALIZING DATA
************************************************************************************************************

BASIC CHARTS IN GGPLOT
SMALL MULTIPLES WITH GGPLOT
STYLING PLOTS IN GGPLOT
View more at http://colorbrewer2.org/
FINISH YOUR PLOTS

QUIZ :
1. This ggplot method creates simple charts using minimal inputs:
	qplot

2. If you can to create a small multiples chart, what ggplot method should you use?
	facet_wrap

3. What color library provides built-in pallettes for styling your plots in ggplot?
	Color Brewer